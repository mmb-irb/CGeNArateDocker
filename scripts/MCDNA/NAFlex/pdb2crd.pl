#!/usr/bin/perl
use strict;

# Adapted from MoDEL2.pl script pdb2crd.
# Now it works with Models, converting pdb with models to a trajectory crd.

# Input Parameters.
my $long=@ARGV;
if ($long != 2){
    print "Usage: perl $0 <inputPDB_with_MODELS> <outputCRD>\n";
    exit(0);
}
my ($fnIn, $fnOut) =@ARGV;

my @coords;
my ($i, $x_max, $y_max, $z_max);

my %all;
my $model = 0;
my $numats = 0;
open IN,"$fnIn";
while (<IN>){
   if(/ENDMDL/){
	$numats = scalar(@{$all{$model}})/3 if (!$numats);
	next;
   }
   if(/MODEL/){
	chomp;
	my ($tag, $mod) = split ' ';
	$model = $mod + 0;
	print "MODEL: $model ($_)\n";
	next;
   }
   next if (! /ATOM/);
   /^.{30}(.{8})(.{8})(.{8})/;
   push @{$all{$model}}, ($1,$2,$3);
}
close IN;

open OUT,">$fnOut";
print  OUT "##  crd file generated by pdb2crd ($numats)\n";
#printf OUT "%6i\n", $numats;
foreach my $modNumber (sort {$a <=> $b} keys %all){
  print "Writing Model $modNumber\n";
  $i = 0;
  for (@{$all{$modNumber}}){
    $i++;
    printf OUT "%8.3f", $_;
    print  OUT "\n" if ($i % 10 == 0);
  }

  print OUT "\n" unless ($i % 10 == 0);
}
close OUT;
